version: "1.0" # Orquest version

description: Will analyse data found in the inbox folder using ...

input:
    - runfolder
    - host
    - project_type
    - runfolder_host
    - runfolder_host_port
    - runfolder_api_version
    - processing_host
    - processing_key
    - processing_user
    - local_folder_prefix
    - mail_lab
    - mail_bioinfo

vars:
  - experiment_name: null
  - run_year: null
  - run_date: null
  - failed_step: null
  - analysis_folder: null

tasks:
  get_experiment_name:
    action: core.local
    input:
      cmd: python -c 'import sys; sys.stdout.write("<% ctx(runfolder) %>".split("/")[-1])'
    next:
      - when: <% succeeded() %>
        publish: experiment_name=<% result().stdout %>
        do:
          - get_run_year
      - when: <% failed() %>
        publish: failed_step='get_experiment_name  -- Couldn't get experiment name, <% result().stdout %>, <% result().stderr %>'
        do:
          - bioinfo_error_notifier
          - wp2_error_notifier
          - mark_as_failed

  get_run_year:
      action: core.local
      input:
        cmd: python -c 'import sys;import re; p = re.compile("^.+_(\d{2})\d{4}_M[0-9A-Z]+$");sys.stdout.write("20" + p.search("<% ctx(experiment_name) %>").group(1))'
      next:
        - when: <% succeeded() %>
          publish: run_year=<% result().stdout %>
          do:
            - get_run_date
        - when: <% failed() %>
          publish: failed_step='get_run_year  -- Couldn't extract run year, <% result().stdout %>, <% result().stderr %>'
          do:
            - bioinfo_error_notifier
            - wp2_error_notifier
            - mark_as_failed

  get_run_date:
      action: core.local
      input:
        cmd: python -c 'import sys;import re; p = re.compile("^.+_(\d{6})_M[0-9A-Z]+$");sys.stdout.write(p.search("<% ctx(experiment_name) %>").group(1))'
      next:
        - when: <% succeeded() %>
          publish: run_date=<% result().stdout %>
          do:
            - mark_as_started
        - when: <% failed() %>
          publish: failed_step='get_run_date  -- Couldn't extract date, <% result().stdout %>, <% result().stderr %>'
          do:
            - bioinfo_error_notifier
            - wp2_error_notifier
            - mark_as_failed

  mark_as_started:
    action: core.http
    input:
      url: http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "started"}'
      method: "POST"
    next:
      - when: <% succeeded() %>
        do:
          - create_rawdata_folder
      - when: <% failed() %>
        publish: failed_step="mark_as_started -- Couldn't mark <% ctx(runfolder) %> as started!"
        do:
          - bioinfo_error_notifier
          - wp2_error_notifier

  create_rawdata_folder:
    action: core.local
    input:
      cmd: mkdir -m 770 -p <% ctx(local_folder_prefix) %>/<% ctx(project_type) %>/analysis/<% ctx(run_year) %>/<% ctx(experiment_name) %>
    next:
      - when: <% succeeded() %>
        publish: analysis_folder=<% ctx(local_folder_prefix) %>/<% ctx(project_type) %>/analysis/<% ctx(run_year) %>/<% ctx(experiment_name) %>
        do:
          - copy_inbox_data
      - when: <% failed() %>
        publish: failed_step='create_rawdata_folder  -- Couldn't create raw data folder, <% result().stdout %>, <% result().stderr %>'
        do:
          - bioinfo_error_notifier
          - wp2_error_notifier
          - mark_as_failed

  copy_inbox_data:
    action: core.local
    input:
      cwd: <% ctx(local_folder_prefix) %>/<% ctx(project_type) %>/INBOX
      cmd: cp -rp <% ctx(experiment_name) %>/* <% ctx(analysis_folder) %>/
      timeout: 86400
    next:
      - when: <% succeeded() %>
        do:
          - run_analysis
      - when: <% failed() %>
        publish: failed_step='copy_inbox_data  -- Couldn't copy inbox data, <% result().stdout %>, <% result().stderr %>'
        do:
          - bioinfo_error_notifier
          - wp2_error_notifier
          - mark_as_failed

  run_analysis:
    action: ductus.start_wp2_truesight_myeloid_analysis
    input:
      username: <% ctx(processing_user) %>
      private_key: <% ctx(processing_key) %>
      hosts: <% ctx(processing_host) %>
      experiment_name: <% ctx(experiment_name) %>
      run_year: <% ctx(run_year) %>
      current_date: <% ctx(run_date) %>
      wp2_trusight_myelod_script_version: "1.0"
    next:
      - when: <% succeeded() %>
        do:
          - mark_as_finished
      - when: <% failed() %>
        publish: failed_step='run_analysis  -- Couldn't start TrueSight analysis, <% result().stdout %>, <% result().stderr %>'
        do:
          - bioinfo_error_notifier
          - wp2_error_notifier
          - mark_as_failed

  wp2_error_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_lab) %>
      from: stanley@clinicalgenomics-uu.se
      subject: "[DUCTUS][WP2][ERROR] - TrueSight processing failure, <% ctx(experiment_name) %>"
      body: Something went wrong during TrueSight processing of folder <% ctx(experiment_name) %>. A Bioinformatician has been notified.
    next:
      - when: <% succeeded() %>
        do:
          - fail

  bioinfo_error_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-uu.se
      subject: "[DUCTUS][WP2][ERROR] - TrueSight processing, <% ctx(experiment_name) %>"
      body: Something went wrong during the TrueSight processing of <% ctx(experiment_name) %>, please investigate!!!\n Failure message -- <% failed_step  %>
    next:
      - when: <% succeeded() %>
        do:
          - fail

  mark_as_finished:
    action: core.http
    input:
      url: http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "done"}'
      method: "POST"
    next:
      - when: <% failed() %>
        publish: failed_step="mark_as_finished -- Couldn't mark <% ctx(runfolder) %> as finished!"
        do:
          - bioinfo_error_notifier
          - wp2_error_notifier

  mark_as_failed:
    action: core.http
    input:
      url:  http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "error"}'
      method: "POST"
    next:
      - when: <% succeeded() %>
        do:
          - fail
      - when: <% failed() %>
        publish: failed_step="mark_as_failed -- Couldn't mark <% ctx(runfolder) %> as failed!"
        do:
          - bioinfo_error_notifier
          - wp2_error_notifier
